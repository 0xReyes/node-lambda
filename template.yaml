AWSTemplateFormatVersion: '2010-09-09'
Description: CORS Proxy with bundled node_modules

Resources:
  NodeLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  NodeLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: cors-proxy
      Handler: src/handler.handler
      Runtime: nodejs18.x
      Role: !GetAtt NodeLambdaRole.Arn
      Code:
        ZipFile: "dummy"
      Environment:
        Variables:
          NODE_ENV: production
          BLOCKED_HOSTS: 'localhost,127.0.0.1,169.254.169.254'
      MemorySize: 512
      Timeout: 15

  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: CORSProxyAPI
      ProtocolType: HTTP

  ApiGatewayIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NodeLambdaFunction.Arn}/invocations
      PayloadFormatVersion: '2.0'

  ApiGatewayRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: 'ANY /{proxy+}'
      Target: !Sub integrations/${ApiGatewayIntegration}

  ApiGatewayDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    Properties:
      ApiId: !Ref ApiGateway

  ApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGateway
      StageName: $default
      DeploymentId: !Ref ApiGatewayDeployment
      AutoDeploy: true

  ApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NodeLambdaFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*/*

Outputs:
  FunctionName:
    Description: Lambda Function Name
    Value: !Ref NodeLambdaFunction

  ApiEndpoint:
    Description: API Gateway HTTPS Endpoint
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com"
